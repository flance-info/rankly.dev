services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: laravel-app
    container_name: laravel-app
    ports:
      - "8000:80"
    volumes:
      - .:/app:cached
      - /app/vendor
      - /app/node_modules
    environment:
      - APP_ENV=production
      - APP_DEBUG=true
      - APP_KEY=base64:ZsVq7IAnNOtsRmKVe4WeBsiK8sueZ/2W4wnJpEDohMk=
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
      - APACHE_RUN_USER=#1000
      - APACHE_RUN_GROUP=#1000
    depends_on:
      - db
      - node

  node:
    build:
      context: .
      dockerfile: Dockerfile.node
    container_name: node-app
    deploy:
      resources:
        limits:
          cpus: "1.0"       # Limit the container to use at most 1 CPU
          memory: "256M"    # Limit the container to use at most 256MB of memory
        reservations:
          memory: "128M"    # Reserve 128MB of memory for the container
    ports:
      - "5173:5173"
    volumes:
      - ./public:/app/public:cached
      - ./resources:/app/resources:cached
      - ./vite.config.js:/app/vite.config.js:cached
    environment:
      - NODE_OPTIONS=--max-old-space-size=2048
    command: sh -c "npm run build && exit"

  db:
    image: postgres:13
    container_name: laravel-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: laravel
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: secret
    volumes:
      - db_data:/var/lib/postgresql/data:cached
    deploy:
      resources:
        limits:
          cpus: '6'
          memory: 8G
        reservations:
          memory: 8G
    shm_size: "8G"  # Add this line to increase shared memory size

  python:
    build:
      context: .
      dockerfile: python.dockerfile
    image: python:3.11.3
    container_name: python-app
    working_dir: /usr/src/app
    volumes:
      - ./python:/app/python
      - ./python/dumps:/app/python/dumps
      - .:/app:cached
      - ./python:/usr/src/app:cached
    command: sh -c "pip install -r requirements.txt && tail -f /dev/null"
    depends_on:
      - db

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: secret
    ports:
      - "5050:80"
    depends_on:
      - db

  laravel-db-timescale-new:
    image: timescale/timescaledb:latest-pg13
    container_name: laravel-db-timescale-new
    restart: unless-stopped
    environment:
      POSTGRES_DB: laravel-db-mod
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: laravel
      TIMESCALEDB_TELEMETRY: 'off'
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    networks:
      - rankly_default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U laravel -d laravel-db-mod"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  db_data:
    driver: local
  node_modules:
    driver: local
  timescaledb_data:
    driver: local

networks:
  rankly_default:
    external: true
